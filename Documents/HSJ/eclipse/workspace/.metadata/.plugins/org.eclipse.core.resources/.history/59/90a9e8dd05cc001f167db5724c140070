package chapter03;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.util.Date;

public class D_LocalDateTime {

	public static void main(String[] args) {
		// Date 클래스 : 날짜를 다루는 클래스
		// Date 클래스의 대부분의 메서드는 Java 1.1부터 사용하지 않도록 권장
		// Date 클래스가 날짜의 데이터 타입으로 자주 사용된다.
		// 실제 날짜를 관리할땐 문자열이 편하다.
		// 외부 연결시 문제가 생길 수 있다.
		
		Date dateNow = new Date();
		System.out.println(dateNow);
		// The method getDate() from the type Date is deprecated
		// getDate()는 Date클래스에서 사용하지 마라고 경고되어있다.(언제 사라질지 모른다.)
		System.out.println(dateNow.getDate());
		
		// LocalDateTime 클래스 : Java 8부터 Date 클래스를 대체하기 위해 사용되는 클래스
		// 날짜와 시간을 다룬다.
		// LocalDate 클래스 : 날짜만
		// LocalTime 클래스 : 시간만
		
		// 생성자를 사용하지 않는다.
		// 현재 날짜 및 시간의 인스턴스 생성
		LocalDateTime now = LocalDateTime.now();
		LocalDate nowDate = LocalDate.now();
		LocalTime nowTime = LocalTime.now();
		System.out.println(now);
		System.out.println(nowDate);
		System.out.println(nowTime);
		
		// 특정 시간 및 날짜의 인스턴스 생성
		LocalDateTime date1 = LocalDateTime.of(2025, 1, 6, 0, 0, 0);
		System.out.println(date1);
		
		// 특정 날짜 및 시간의 요소 불러오기
		// .getXXX()
		// 달을 10진수로 표현 1~12
		int month = now.getMonthValue();
		System.out.println(month);
		// 날짜를 10진수로 표현 1~
		int day = now.getDayOfMonth();
		System.out.println(day);
		
		// 특정 날짜 및 시간의 요소 변경하기
		// withXXX()
		// 인스턴스가 직접 변경되는 것이 아니고 변경된 인스턴스를 생성해서 반환
		now.withYear(2020);
		System.out.println(now);
		now = now.withYear(2020);
		System.out.println(now);
		
		now = now.withYear(2020).withHour(1);
		System.out.println(now);
		
		// 날짜 및 시간 계산하기
		// Date 클래스
		dateNow.setHours(dateNow.getHours() + 18);
		System.out.println(dateNow);
		dateNow.setMinutes(dateNow.getMinutes() - 20);
		System.out.println(dateNow);
		
		// plusXXX(), minusXXX()
		// 인스턴스가 직접 변경되지 않고 변경된 인스턴스를 생성하여 반환
		System.out.println(now);
		now = now.plusHours(18).minusMinutes(20);
		System.out.println(now);
		
		// LocalDateTime을 Date로 변경
		// Date 클래스의 from 메서드와 LocalDateTime 인스턴스의 toInstant 메서드를 활용
		Date localToDate = Date.from(now.atZone(ZoneId.systemDefault()).toInstant());
		System.out.println(localToDate);
		
		// Date를 LocalDateTime으로 변경
		// Date 인스턴스의 toInstant, toLocalDateTime 메서드 사용
		LocalDateTime dateToLocal = dateNow.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
		System.out.println(dateToLocal);
    }
}
